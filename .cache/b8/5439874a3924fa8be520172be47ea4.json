{"id":"ejercicios/herenciaPrototipal.html","dependencies":[{"name":"C:\\Users\\ruben\\Desktop\\PLATZI\\Desarrollo WEB\\javascript-profesional\\package.json","includedInParent":true,"mtime":1629061460828}],"generated":{"html":"\r\n<html>\r\n    <head>\r\n      <title>Herencia Prototipal</title>\r\n    </head>\r\n  \r\n    <body>\r\n      <a href=\"/ejercicios/\">Go back</a>\r\n      <p><em>Abre la consola</em></p>\r\n  \r\n      <h1>\r\n        <code>SomeObject.prototype</code> es un objeto donde definimos el\r\n        prototipo de las instancias de <code>SomeObject</code>. Es decir, las\r\n        instancias de <code>SomeObject</code> van a \"heredar\" de\r\n        <code>SomeObject.prototype</code>.\r\n        <br>\r\n        <br>\r\n        <code>SomeObject.[[Prototype]]</code> es el prototipo de\r\n        <code>SomeObject</code>. Es decir, <code>SomeObject</code> \"hereda\" de\r\n        <code>SomeObject.prototype</code>.\r\n      </h1>\r\n  \r\n      <script>function Hero(name) {\n  this.name = name;\n}\n\nHero.prototype.saludar = function () {\n  console.log(`Hola, soy ${this.name}`);\n};\n\nconst zelda = new Hero('Zelda'); // propiedades de la instancia\n\nconsole.log(`name:${zelda.name}`); // propiedades de la \"clase\"\n\nconsole.log(`saludar:` + zelda.saludar); // propiedades heredadas ej: toString\n\nconsole.log(`toString:` + zelda.toString); // hasOwnProperty (de d√≥nde sale toString o esto?)\n\nconsole.log(`hasOwnProperty:` + zelda.hasOwnProperty(\"name\"));</script>\r\n    </body>\r\n  </html>\r\n  "},"sourceMaps":null,"error":null,"hash":"b1f87a6e1d6b1136f9d5456f65eec08b","cacheData":{"env":{}}}