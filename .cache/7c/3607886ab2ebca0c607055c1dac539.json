{"id":"ejercicios/this.html","dependencies":[{"name":"C:\\Users\\ruben\\Desktop\\PLATZI\\Desarrollo WEB\\javascript-profesional\\package.json","includedInParent":true,"mtime":1629061460828}],"generated":{"html":"<html>\r\n    <head>\r\n        <title>Scope</title>\r\n    </head>\r\n    <body>\r\n        <a href=\"/ejercicios/\">Go Back</a>\r\n        <p><em>Abre la consola</em></p>\r\n        <h1>\r\n            <code>this</code> se refiere a un objeto. Ese objeto es el que actualmente está ejecutando un pedazo de código\r\n        </h1>\r\n\r\n        <script>// this en el scope global\nconsole.log(`this: ${this}`); // this en el scope de una función\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(`whoIsThis(): ${whoIsThis()}`); // this en el scope de una función en strict mode\n\nfunction whoIsThisStrict() {\n  \"use strict\";\n\n  return this;\n}\n\nconsole.log(`whoIsThisStrict(): ${whoIsThisStrict()}`); // this en el contexto de un objeto\n\nconst person = {\n  name: \"Gabriel\",\n  saludar: function () {\n    console.log(`Hola, soy ${this.name}`);\n  }\n};\nconsole.log(person.saludar()); // this cuando sacamos a una función de un objeto\n\nconst accion = person.saludar;\naccion(); // this en el contexto de una \"clase\"\n\nfunction Person(name) {\n  this.name = name;\n}\n\nPerson.prototype.saludar = function () {\n  console.log(`Hola, me llamo ${this.name}`);\n};\n\nconst angela = new Person(\"Angela\");\nangela.saludar();</script>\r\n    </body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"852b6a291f0308cf48612162aadf9a2c","cacheData":{"env":{}}}