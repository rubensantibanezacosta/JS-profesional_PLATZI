{"version":3,"sources":["assets/mediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","toggleMute","AutoPlay","AutoPause","constructor","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","buttonPlay","buttonMute","onclick","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MCAMoB,GFAGpB,ACAAmB,MCAT,CAAe,CDAf,GDAA,ACAmB,CDAElB,ACAA,MDArB,EAA4B;AACxB,AEAAoB,EAAAA,KFAKnB,KAAL,CEAW,EFAAD,CEAE,KFAI,CAACE,EAAlB;AACA,AEAI,ADDRgB,ODCSf,CCDD,CCCKkB,ADDJhB,KDCL,GAAeL,CEAX,ADDR,CAAmBa,ECCI,CDDvB,CDCyB,CAACV,CEAlB,ADDiB,MDCN,IAAkB,ACDHG,EDC9B,ICDqB,EAAgB;AEIzC,ADFQ,ADDJ,MEGE6B,AFHC,CAAC7B,ECCKgB,ECEF,EFHG,CEGFM,AFHGnB,KAAX,EAAiB,CEGD,CAAC2B,IDFb,GAAyB,KAAKd,CCE1B,CAAuB,OAAvB,CAAZ,QDFiC,CAAwBC,IAAxB,CAA6B,IAA7B,CAAzB;ACGR,AHFI,AEAI,ADDAjB,IAAAA,EEGF+B,CHFGjC,EEAIoB,CDDC,CAACf,KEGC,AFHR,GEGWmB,AHFf,ACDiB,IAAb,IEGmB,CAACQ,GDFpB,GAA8B,KAAKZ,ECExB,CAAuB,eAAvB,CAAnB,GDFsC,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;ACGR,AHFC,AEAI,ADDA,MEGCe,UAAU,GAAGV,QAAQ,CAACQ,aAAT,CAAuB,eAAvB,CAAnB;AACA,MAAM9B,MAAM,GAAC,IAAIP,oBAAJ,CAAgB;AAACG,AHD9BH,AEDIc,ADDAP,EEG0BJ,ADF1BW,ADDAP,EEG4B,CDFzB,CCE2B6B,ADF1B7B,EDDE,CAACC,EEGkB,AHDlB,CAACF,AEDL,CDDH,CCCW,OFCf,CAAsBD,YAAtB,GAAoC,YAAW;AGCND,AHArC,AEDI,ADDP,CALD,CEOyCA,MHA/BG,CGAsC,ADDnCA,ECCoC,CAC7C,EHDY,CEDR,CCEAY,CHDS,CEDGZ,MAAZ,SCEJ,EAD6C,EAC7B,IAAIa,kBAAJ,EAD6B;AAApB,AHCrBZ,AEDA,CCAK,CAAb,EHCQA,IAAI,EAAE,AEDAkB,MFCK,EEDG,GFCElB,AEDC,IFCN,AEDUmB,EFAZ,kBEAQ,CAAyB,KAAKJ,kBAA9B,EAAkD;AFEnEd,AEDIa,IFCJb,EEDIa,GFCC,EAAE,IEDM,ADANH,EDCK,AEDG,KFCEV,AEDGa,KFCR,EAFH;AGGjBgB,AHAQpC,AEHmE,IFGnEA,CEHiB,CAAjB,GFGK,CGAH,CAACsC,AHAI,KAAKtC,EGApB,GAAqB,AHHJ,MGGU;AACvBK,ADAImB,ECAJnB,EDAImB,ICAE,CAACX,GDAK,CAACa,MCAb,CDAI,CAAiB,KAAKrB,MAAL,CAAYL,KAA7B;ACCP,AHDO,AECA2B,CCFR,GDEQA,IFDInB,IECI,CFDR,AECSoB,GFDE,aECX,CAA0B,kBAA1B,EAA6C,KAAKL,sBAAlD;AFAI,AECP,aFDc,KAAKvB,KAAL,CAAWQ,KAAlB;AGCZ6B,AHAS,KANQ,KGMP,CAACC,OAAX,GAAqB,MAAM;AACvBjC,ADAAgB,ECAAhB,ADAAgB,MCAM,CAACL,UAAP,CDAkB,CAACa,OAAD,EAAS;ACC9B,AHAO,AEAA,CCFR,OHEYrB,EEAEsB,GFAN,CAAUrB,CEAC,GAAGoB,CFAd,EAAgB,IEAK,CAAC,CAAD,CAArB;AFCI,AECJ,UAAME,CFDG/B,KAAL,CAAWQ,EECA,GFDX,AECcsB,GFDGrB,EECE,CAACuB,EFDpB,eECc,IAAyB,KAAKZ,SAAhD;ACAR,AHAS,IGAN,mBAAmBmB,SAAtB,EAAgC;AAC5BA,ADCI,ECDJA,MDCOR,GCDE,CAACS,KDCN,EAAa,MCDjB,CAAwBC,QAAxB,CAAiC,sCAAjC,EAA4CC,KAA5C,CAAkDC,KAAK,IAAI;AACvDC,AHZS,AEaL,GFbR,CGYIA,OAAO,ADCEvC,CCDDwC,GAAR,CAAYF,CDCR,CAAYrC,GCDC,CAACwC,ADCd,OCDJ;AACH,AHDD,AEEK,GCHL,EDCI,EFAC5C,IEEI,GFFT,CAAaQ,OAAb,CAAqBC,MAAM,IAAI;AGElC,AHDOA,AEEI,IFFJA,MAAM,CAACC,AEEEP,GFFT,CAAWA,EEEP,CAAYE,GFFhB,EEEI;AFDP,AEEI,GFJL;AAGH,AEGI,CFnBL;;AAoBAT,AEAIyB,EAAAA,SFAO,CAACnB,SAAZ,CAAsBE,EEAI,EFA1B,CEA4B,EFAC,YAAU;AACnC,AEAI,OFACN,CEAG+B,IFAR,CAAWzB,IAAX,AEAiB,GAAGqB,QAAQ,CAACM,eAAT,KAA6B,SAA7C;AFCP,CAFD;AEEQ,QAAIF,SAAJ,EAAe;AFCvBjC,AEAY,WFAD,AEAMO,CFALD,KEAA,CAAYE,GFAxB,CAAsBC,AEAV,KFAZ,GAA8B,YAAW;AACjC,AEAC,KAFD,EFEKP,IEAA,CFAL,CAAWO,KAAX;AACH,AEAO,CFFZ,UEEiBF,MAAL,CAAYE,KAAZ;AACH;AFETT,AEDK,WFCM,CAACM,SAAZ,CAAsBS,UAAtB,GAAkC,YAAU;AACxC,MAAG,KAAKb,KAAL,CAAWc,MAAd,EAAqB;AACjB,AErCO,SFqCFR,IAAL;AACH,GAFD,MAEK;AACD,SAAKC,KAAL,CEFOW;AFGV;AACJ,CAND;;AAOApB,WAAW,CAACM,SAAZ,CAAsBW,IAAtB,GAA6B,YAAU;AACnC,OAAKf,KAAL,CAAWQ,KAAX,GAAiB,IAAjB;AACH,CAFD;;AAGAV,WAAW,CAACM,SAAZ,CAAsBY,UAAtB,GAAmC,YAAW;AAC1C,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,CAAC,KAAKR,KAAL,CAAWQ,KAA/B;AACD,CAFH;;eAMeV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config){\r\n    this.media=config.el\r\n    this.plugins = config.plugins || [];\r\n\r\n    this._initPlugins();\r\n}\r\n\r\nMediaPlayer.prototype._initPlugins= function (){\r\n    const player={\r\n        play: ()=> this.play(),\r\n        pause: ()=> this.pause(),\r\n        media: this.media,\r\n        get muted(){\r\n            return this.media.muted;\r\n        },\r\n\r\n        set muted(value){\r\n            this.media.muted=value;\r\n        }\r\n    }\r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player);\r\n    });\r\n};\r\n\r\n\r\n\r\nMediaPlayer.prototype.play = function(){\r\n    this.media.play();\r\n};\r\nMediaPlayer.prototype.pause = function() {\r\n        this.media.pause();\r\n    };\r\n\r\n\r\nMediaPlayer.prototype.togglePlay= function(){\r\n    if(this.media.paused){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n}\r\nMediaPlayer.prototype.mute = function(){\r\n    this.media.muted=true;\r\n}\r\nMediaPlayer.prototype.toggleMute = function() {\r\n    this.media.muted = !this.media.muted\r\n  }\r\n\r\n\r\n\r\nexport default MediaPlayer;\r\n\r\n\r\n","function AutoPlay(){}\r\nAutoPlay.prototype.run = function(player){\r\n    if(!player.muted){\r\n        player.muted=true;\r\n    }\r\n    player.play();\r\n}\r\n\r\n\r\nexport default AutoPlay;","class AutoPause{\r\n    constructor(){\r\n        this.threshold=0.25;\r\n        this.handleIntersection= this.handleIntersection.bind(this);\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n    }\r\n    run(player){\r\n        this.player=player;\r\n        const observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: this.threshold\r\n        })\r\n\r\n        observer.observe(this.player.media);\r\n        document.addEventListener(\"visibilitychange\",this.handleVisibilityChange)\r\n    }\r\n    handleIntersection(entries){\r\n        const entry = entries[0];\r\n\r\n        const isVisible = entry.intersectionRatio>=this.threshold;\r\n\r\n        if(isVisible){\r\n            this.player.play();\r\n        }else{\r\n            this.player.pause();\r\n        }\r\n\r\n    }\r\n    handleVisibilityChange(){\r\n        var isVisible = document.visibilityState === 'visible';\r\n        if (isVisible) {\r\n            this.player.play();\r\n        }else{\r\n            this.player.pause();\r\n        }\r\n    }\r\n}\r\n\r\nexport default AutoPause;","import  MediaPlayer from \"./mediaPlayer.js\";\r\nimport AutoPlay from \"./plugins/AutoPlay.js\";\r\nimport AutoPause from \"./plugins/AutoPause.js\";\r\n\r\n\r\nconst video=document.querySelector(\"video\");\r\nconst buttonPlay = document.querySelector(\"#button__play\");\r\nconst buttonMute = document.querySelector(\"#button__mute\");\r\nconst player=new MediaPlayer({el: video, plugins:[\r\n    new AutoPlay(), new AutoPause()\r\n]});\r\nbuttonPlay.onclick = () => {\r\n    player.togglePlay();\r\n};\r\nbuttonMute.onclick = () => {\r\n    player.toggleMute();\r\n};\r\n\r\nif('serviceWorker' in navigator){\r\n    navigator.serviceWorker.register('./sw.js').catch(error => {\r\n        console.log(error.message);\r\n    });\r\n}"]}